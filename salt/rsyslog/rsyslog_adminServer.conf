#初始化
$ModLoad			impstats.so
$PStatsInterval			300

#加载模块
$ModLoad			immark.so	# provides --MARK-- message capability
$ModLoad			imuxsock.so	# provides support for local system logging (via logger command)
$ModLoad			imklog.so	# provides kernel logging support (previously done by rklogd) 
$ModLoad			imudp.so	# provides UDP syslog reception
$ModLoad			imtcp.so	# provides TCP syslog reception and GSS-API (if compiled)
$ModLoad			imrelp.so	# RELP input
$ModLoad			imfile.so	# Text file input
$ModLoad			omsnmp.so	# Send SNMP traps
$ModLoad			ommysql.so	# Log to MySQL
$ModLoad			ommail.so	# Send mail
$ModLoad			omrelp.so	# Send to another host via RELP

#定义服务端口
$UDPServerAddress		*		# all local interfaces
$UDPServerRun			514		# start UDP server (log server receiver)
$InputTCPServerRun		514		# start TCP server (log server receiver)
$InputRELPServerRun		20514		# start RELP Protocol

#定义文件接收日志方式
#$InputFileName			/var/log/i-am-a-text-file.log
#$InputFileTag			my-text-file:
#$InputFileStateFile		stat-file1
#$InputFileSeverity		error
#$InputFileFacility		local7
#$InputFilePollInterval		10		# check for new lines every 10 seconds
#$InputRunFileMonitor

#定义日志文件权限
$umask				0000
$DirCreateMode			0640
$FileCreateMode			0640
$RepeatedMsgReduction		off
$RepeatedMsgContainsOriginalMsg off

#定义异步模式队列文件
$WorkDirectory			/var/log/rsyslog	# default location for work (spool) files
$ActionQueueType		LinkedList		# use asynchronous processing
$ActionQueueFileName		queue			# set file name, also enables disk mode
$ActionResumeRetryCount		-1			# infinite retries on insert failure
$ActionQueueSaveOnShutdown	on			# save in-memory data if rsyslog shuts down
$MainMsgQueueMaxFileSize	100M
$ActionQueueMaxFileSize		5M

#定义模版
$template	TraditionalFormat,"%timegenerated% %HOSTNAME% %syslogtag%%msg:::drop-last-lf%\n"
$template	DEBUG,"Debug line with all properties:\nFROMHOST: '%FROMHOST%', HOSTNAME: '%HOSTNAME%', PRI: %PRI%,\nsyslogtag '%syslogtag%', programname: '%programname%', APP-NAME: '%APP-NAME%', PROCID: '%PROCID%', MSGID: '%MSGID%',\nTIMESTAMP: '%TIMESTAMP%', STRUCTURED-DATA: '%STRUCTURED-DATA%',\nmsg: '%msg%'\nescaped msg: '%msg:::drop-cc%'\nrawmsg: '%rawmsg%'\n\n"
$template	RFC3164fmt,"<%PRI%>%TIMESTAMP% %HOSTNAME% %syslogtag%%msg%"
$template	wallmsg,"\r\n\7Message from syslogd@%HOSTNAME% at %timegenerated% ...\r\n %syslogtag%%msg%\n\r"
$template	WinSyslogFmt,"%HOSTNAME%,%timegenerated:1:10:date-rfc3339%,%timegenerated:12:19:date-rfc3339%,%timegenerated:1:10:date-rfc3339%,%timegenerated:12:19:date-rfc3339%,%syslogfacility%,%syslogpriority%,%syslogtag%%msg%\n"
$template	ForwardFormat,"<%PRI%>%TIMESTAMP:::date-rfc3339% %HOSTNAME% %syslogtag:1:32%%msg:::sp-if-no-1st-sp%%msg%"
$template	dbFormat,"insert into SystemEvents (Message, Facility,FromHost, Priority, DeviceReportedTime, ReceivedAt, InfoUnitID, SysLogTag) values ('%msg%', %syslogfacility%, '%HOSTNAME%',%syslogpriority%, '%timereported:::date-mysql%', '%timegenerated:::date-mysql%', %iut%, '%syslogtag%')",sql
$template	myDbFormat,"insert into SystemEvents (Message, Facility,FromHost, Priority, DeviceReportedTime, ReceivedAt, InfoUnitID, SysLogTag, processid) values ('%msg%', %syslogfacility%, '%fromhost-ip%',%syslogpriority%, '%timereported:::date-mysql%', '%timegenerated:::date-mysql%', %iut%, '%programname%', '%PROCID%')",sql
$template	FileFormat,"%TIMESTAMP:::date-rfc3339% %HOSTNAME% %syslogtag%%msg:::sp-if-no-1st-sp%%msg:::drop-last-lf%\n"
$template	myFileFormat,"%TIMESTAMP% %fromhost-ip% %HOSTNAME% %syslogfacility% %syslogpriority% #%programname%# #%PROCID%#%msg:::drop-last-lf%\n"
#$template	myFileDest,"/data/log/messagelog/rsyslog/messages-%$year%%$month%%$day%.log"
$template	myFileDest,"/var/log/rsyslog/messages.log"

#加入包含文件
$IncludeConfig						/etc/rsyslog.d/*.conf

#定义规则
# Log all kernel messages to the console.
# Logging much else clutters up the screen.
#kern.* /dev/console

# Log anything (except mail) of level info or higher.
# Don't log private authentication messages!
#*.info;mail.none;authpriv.none;cron.none /var/log/messages
if \
        $source == 'localhost' \
        and \
               $syslogseverity <= '6' \
        and ( \
                        $syslogfacility-text != 'mail' \
                and \
                        $syslogfacility-text != 'authpriv' \
                and \
                        $syslogfacility-text != 'cron' \
        ) \
then /var/log/messages

# The authpriv file has restricted access.
#authpriv.* /var/log/secure
if \
        $source == 'localhost' \
                and \
        $syslogfacility-text == 'authpriv' \
then /var/log/secure

# Log all the mail messages in one place.
#mail.* -/var/log/maillog
if \
        $source == 'localhost' \
                and \
        $syslogfacility-text == 'mail' \
then -/var/log/maillog

# Log cron stuff
#cron.* /var/log/cron
if \
        $source == 'localhost' \
                and \
        $syslogfacility-text == 'cron' \
then /var/log/cron

# Everybody gets emergency messages
#*.emerg *
if \
        $source == 'localhost' \
                and \
        $syslogseverity-text == 'emerg' \
then *

# Save news errors of level crit and higher in a special file.
#uucp,news.crit /var/log/spooler
if \
        $source == 'localhost' \
                and \
        (\
                $syslogfacility-text == 'uucp' \
                        or \
                $syslogfacility-text == 'news' \
        )\
                and \
        $syslogseverity-text == 'crit' \
then /var/log/spooler

# Save boot messages also to boot.log
#local7.* /var/log/boot.log
if \
        $source == 'localhost' \
                and \
        $syslogfacility-text == 'local7' \
then /var/log/boot.log

#定义远程规则

if \
	( $programname == 'sendmail' and $syslogpriority >= 0 ) \
		or \
	( $programname == 'slapd' and $syslogpriority >= 5 ) \
		or \
	( $programname == 'named' and $syslogpriority >= 5 ) \
		or \
	( $programname == 'mfsmaster' and $syslogpriority >= 5 ) \
then {
	*.*						~
} else {
:msg, contains, "obsolete kudzu ddcProbe called"	~
:msg, contains, "RRD_update"				~
:msg, regex, "repeated [0-9]* times"			~
*.*							:ommysql:10.7.0.55,Syslog,rsyslog,rsyslog;myDbFormat
*.*							-?myFileDest;myFileFormat
}

#old style
#if $fromhost-ip == '127.0.0.1' or $programname == 'sendmail' or ( $syslogtag startswith 'named' and $syslogpriority >= 5 ) or ( $syslogtag startswith 'crond' and $msg contains '/usr/local/cntv' ) or $syslogtag startswith 'slapd' then

